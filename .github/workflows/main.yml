name: Ghostlang CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  grammar:
    name: Tree-sitter Grammar Tests
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: tree-sitter-ghostlang/package.json

    - name: Install tree-sitter dependencies
      working-directory: tree-sitter-ghostlang
      run: npm install

    - name: Generate grammar
      working-directory: tree-sitter-ghostlang
      run: npx tree-sitter generate

    - name: Run grammar tests
      working-directory: tree-sitter-ghostlang
      run: npx tree-sitter test

    - name: Validate query files
      working-directory: tree-sitter-ghostlang
      run: |
        echo "Validating query files..."
        test -f queries/highlights.scm
        test -f queries/locals.scm
        test -f queries/injections.scm
        test -f queries/textobjects.scm

  language:
    name: Ghostlang Runtime
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4

    - name: Verify Zig installation
      run: |
        zig version
        echo "Zig path: $(which zig)"

    - name: Build Ghostlang runtime
      run: |
        zig build
        echo "Build completed successfully"

    - name: Run Zig tests
      run: |
        zig build test
        echo "All tests passed"

    - name: Run fuzzing tests
      run: |
        zig build fuzz
        echo "Fuzzing tests passed"

    - name: Run memory limit tests
      run: |
        zig build test-memory
        echo "Memory limit tests passed"

    - name: Run performance benchmarks
      run: |
        zig build bench
        echo "Performance benchmarks completed"

  memory-safety:
    name: Memory Leak Detection
    runs-on: self-hosted
    needs: language

    steps:
    - uses: actions/checkout@v4

    - name: Install Valgrind
      run: |
        if ! command -v valgrind &> /dev/null; then
          echo "Installing Valgrind..."
          sudo apt-get update -qq
          sudo apt-get install -y valgrind
        fi
        valgrind --version

    - name: Build with Debug symbols
      run: |
        zig build -Doptimize=Debug

    - name: Run tests under Valgrind
      run: |
        echo "Running memory leak detection..."
        valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --error-exitcode=1 \
          ./zig-out/bin/ghostlang <<< "var x = 10" 2>&1 | tee valgrind.log

        if grep -q "All heap blocks were freed -- no leaks are possible" valgrind.log || \
           (grep -q "definitely lost: 0 bytes" valgrind.log && grep -q "indirectly lost: 0 bytes" valgrind.log); then
          echo "✓ No memory leaks detected"
        else
          echo "✗ Memory leaks found!"
          exit 1
        fi

    - name: Run memory limit test under Valgrind
      run: |
        valgrind --leak-check=full --error-exitcode=1 \
          ./zig-out/bin/memory_limit_test 2>&1 | tee mem-test-valgrind.log

        if grep -q "All heap blocks were freed -- no leaks are possible" mem-test-valgrind.log || \
           grep -q "definitely lost: 0 bytes" mem-test-valgrind.log; then
          echo "✓ Memory limit allocator has no leaks"
        else
          echo "✗ Memory leaks in allocator!"
          exit 1
        fi

  integration:
    name: Integration Test
    runs-on: self-hosted
    needs: [grammar, language]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: tree-sitter-ghostlang/package.json

    - name: Build complete system
      run: |
        cd tree-sitter-ghostlang
        npm install
        npx tree-sitter generate
        cd ..
        zig build
        zig build test
        zig build fuzz
        zig build bench
        echo "Integration test passed"